# 
applicationName: "test-app"

# You'll usually want to add your resources to the argocd namespace.
argoNamespace: "argocd"

# Add this finalizer ONLY if you want these to cascade delete.
# The default behaviour is foreground cascading deletion
# - resources-finalizer.argocd.argoproj.io
# Alternatively, you can use background cascading deletion
# - resources-finalizer.argocd.argoproj.io/background
finalizers:
- resources-finalizer.argocd.argoproj.io

# Add labels to your application object.
labels:
  name: test-app

# The ArgoCD Project the application belongs to.
project: "default"

# Destination cluster and namespace to deploy the application
# Use clusterName OR clusterServer, not both. If both are defined, 
# clusterName will take precedence.
destination:
  clusterName:
  clusterServer: "https://kubernetes.default.svc"

# Source of the application manifests
source:
  # Can point to either a Helm chart repo or a git repo.
  repoURL:
  # For Helm, targetRevision refers to the chart version.
  # If git repo, this will be a ref (branch name, tag, etc)
  targetRevision: HEAD
  # This has no meaning for Helm charts pulled directly from a Helm repo instead of git.
  # For git, the path is the repo directory path to the manifest(s).
  path: test-app-repo/gitops/argocd

  # Helm specific config
  # Set this when pulling directly from a Helm repo. DO NOT set for git-hosted Helm charts.
  chart: chart-name
  helm:
    # If true then adds --pass-credentials to Helm commands to pass credentials to all domains
    passCredentials: false
    # Extra parameters to set (same as setting through values.yaml, but these take precedence)
    parameters:
    - name: "nginx-ingress.controller.service.annotations.external-dns\\.alpha\\.kubernetes\\.io/hostname"
      value: mydomain.example.com
    - name: "ingress.annotations.kubernetes\\.io/tls-acme"
      value: "true"
      forceString: true # ensures that value is treated as a string
    # Use the contents of files as parameters (uses Helm's --set-file)
    fileParameters:
    - name: config
      path: files/config.json
    # Release name override (defaults to application name)
    releaseName: sample-app
    # Helm values files for overriding values in the helm chart
    # The path is relative to the spec.source.path directory defined above
    valueFiles:
    - values-prod.yaml
    # Ignore locally missing valueFiles when installing Helm chart. Defaults to false
    ignoreMissingValueFiles: false 
    # Values file as block file. Prefer to use valuesBlockObject if possible
    valuesBlockFile: |-
      ingress:
        enabled: true
        path: /
        hosts:
          - mydomain.example.com
        annotations:
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
        labels: {}
        tls:
          - secretName: mydomain-tls
            hosts:
              - mydomain.example.com
    # Values file as block file. This takes precedence over valuesBlockFile
    valuesBlockObject:
      ingress:
        enabled: true
        path: /
        hosts:
          - mydomain.example.com
        annotations:
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
        labels: {}
        tls:
          - secretName: mydomain-tls
            hosts:
              - mydomain.example.com
    # Skip custom resource definition installation if chart contains custom resource definitions. Defaults to false
    skipCrds: false

    # Optional Helm version to template with. If omitted it will fall back to look at the 'apiVersion' in Chart.yaml
    # and decide which Helm binary to use automatically. This field can be either 'v2' or 'v3'.
    version: v2
  
  # Kustomize specific config
  kustomize:
    # Optional kustomize version. Note: version must be configured in argocd-cm ConfigMap
    version: v3.5.4
    # Supported kustomize transformers. https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/
    namePrefix: prod-
    nameSuffix: -some-suffix
    commonLabels:
      foo: bar
    commonAnnotations:
      baz: buz-${ARGOCD_APP_REVISION}
    # Toggle which enables/disables env variables substitution in commonAnnotations
    commonAnnotationsEnvsubst: true
    images:
    - gcr.io/heptio-images/ks-guestbook-demo:0.2
    - my-app=gcr.io/my-repo/my-app:0.1
    namespace: custom-namespace
    replicas:
    - name: kustomize-guestbook-ui
      count: 4

  # directory specific config
  directory:
    recurse: true
    jsonnet:
      # A list of Jsonnet External Variables
      extVars:
      - name: foo
        value: bar
        # You can use "code to determine if the value is either string (false, the default) or Jsonnet code (if code is true).
      - code: true
        name: baz
        value: "true"
      # A list of Jsonnet Top-level Arguments
      tlas:
      - code: false
        name: foo
        value: bar
     # Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during
    # manifest generation. This takes precedence over the `include` field.
    # To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{config.yaml,env-use2/*}'
    exclude: 'config.yaml'
    # Include contains a glob pattern to match paths against that should be explicitly included during manifest
    # generation. If this field is set, only matching manifests will be included.
    # To match multiple patterns, wrap the patterns in {} and separate them with commas. For example: '{*.yml,*.yaml}'
    include: '*.yaml'

# Sources field specifies the list of sources for the application
sources:
  - repoURL: https://github.com/argoproj/argocd-example-apps.git  # Can point to either a Helm chart repo or a git repo.
    targetRevision: HEAD  # For Helm, this refers to the chart version.
    path: guestbook  # This has no meaning for Helm charts pulled directly from a Helm repo instead of git.
    ref: my-repo  # For Helm, acts as a reference to this source for fetching values files from this source. Has no meaning when under `source` field
# Extra information to show in the Argo CD Application details tab
info:
  - name: 'Example:'
    value: 'https://example.com'
# Sync policy
# automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
syncPolicy:
  # Specifies if resources should be pruned during auto-syncing ( false by default ).
  prune: false
  # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
  selfHeal: true
  # Allows deleting all application resources during automatic syncing ( false by default ).
  allowEmpty: true
  # Sync options which modifies sync behavior
  syncOptions:
  - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
  - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
  - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
  - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
  - RespectIgnoreDifferences=true # When syncing changes, respect fields ignored by the ignoreDifferences configuration
  # Sets the metadata for the application namespace. Only valid if CreateNamespace=true (see above), otherwise it's a no-op.
  managedNamespaceMetadata:
    # The labels to set on the application namespace
    labels:
      any: label
      you: like
    # The annotations to set on the application namespace
    annotations:
      the: same
      applies: for
      annotations: on-the-namespace
  # The retry feature is available since v1.7
  retry:
    # number of failed sync attempt retries; unlimited number of attempts if less than 0
    limit: 5
    backoff:
      # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
      duration: 5s
      # a factor to multiply the base duration after each failed retry
      factor: 2
      # the maximum amount of time allowed for the backoff strategy
      maxDuration: 3m
# Will ignore differences between live and desired states during the diff. Note that these configurations are not
# used during the sync process unless the `RespectIgnoreDifferences=true` sync option is enabled.
ignoreDifferences:
# for the specified json pointers
- group: apps
  kind: Deployment
  jsonPointers:
  - /spec/replicas
- kind: ConfigMap
  jqPathExpressions:
  - '.data["config.yaml"].auth'
# for the specified managedFields managers
- group: "*"
  kind: "*"
  managedFieldsManagers:
  - kube-controller-manager
  # Name and namespace are optional. If specified, they must match exactly, these are not glob patterns.
  name: my-deployment
  namespace: my-namespace
# RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for
# informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional
# circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the
# space used to store the history, so we do not recommend increasing it.
revisionHistoryLimit: 10
